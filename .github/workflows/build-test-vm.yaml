name: build-test-vm

on:
  workflow_dispatch: # adds ability to run this manually
    inputs:
      tag:
        description: 'Tag to use for the Docker images'
        type: string
        required: true
  workflow_call:
    inputs:
      skip:
        description: 'Changes this action to perform a no-op'
        type: boolean
        required: false
      tag:
        description: 'Tag to use for the Docker images'
        type: string
        required: true
      upload-vm-builder:
        description: 'If true, upload vm-builder in an artifact'
        type: boolean
        required: false
        default: false
      archs:
        description: 'Architecture to build for'
        type: string
        required: false
        default: '["amd64","arm64"]'
    outputs:
      vm-postgres-16-bullseye:
        description: 'image name for postgres:16-bullseye, VM-ified'
        value: ${{ jobs.merge-vm-images.outputs.vm-postgres-16-bullseye }}

env:
  IMG_POSTGRES_16_BULLSEYE: "neondatabase/vm-postgres-16-bullseye"
  # using image built in the same workflow
  IMG_DAEMON: "neondatabase/neonvm-daemon"
  TARGET_ARCH: "amd64"

defaults:
  run:
    shell: bash -euo pipefail {0}

jobs:
  build:
    # nb: use format(..) to catch both inputs.skip = true AND inputs.skip = 'true'.
    if: ${{ format('{0}', inputs.skip) != 'true' }}
    strategy:
      matrix:
        arch: ${{ fromJson(inputs.archs) }}
    runs-on: ${{ fromJson(format('["self-hosted", "{0}"]', matrix.arch == 'arm64' && 'huge-arm64' || 'large')) }}
    outputs:
      vm-postgres-16-bullseye: ${{ steps.tags.outputs.vm-postgres-16-bullseye }}
      daemon: ${{ steps.tags.outputs.daemon }}
    steps:
      - id: tags
        run: |
          echo "vm-postgres-16-bullseye=${{ env.IMG_POSTGRES_16_BULLSEYE }}-${{ matrix.arch }}:${{ inputs.tag }}" | tee -a $GITHUB_OUTPUT
          echo "daemon=${{ env.IMG_DAEMON }}-${{ matrix.arch }}:${{ inputs.tag }}" | tee -a $GITHUB_OUTPUT
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          # Disable cache on self-hosted runners to avoid /usr/bin/tar errors, see https://github.com/actions/setup-go/issues/403
          cache: false
        # Sometimes setup-go gets stuck. Without this, it'll keep going until the job gets killed
        timeout-minutes: 10
      - name: Build daemon image
        run: make docker-build-daemon
        env:
          IMG_DAEMON: ${{ steps.tags.outputs.daemon }}

      - run: make bin/vm-builder
        env:
          IMG_DAEMON: ${{ steps.tags.outputs.daemon }}

      - name: upload vm-builder
        if: ${{ format('{0}', inputs.upload-vm-builder) == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ format('vm-builder-{0}', matrix.arch) }}
          path: bin/vm-builder
          if-no-files-found: error
          retention-days: 2

      - name: set custom docker config directory
        uses: neondatabase/dev-actions/set-docker-config-dir@6094485bf440001c94a94a3f9e221e81ff6b6193

      - name: login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.NEON_DOCKERHUB_USERNAME }}
          password: ${{ secrets.NEON_DOCKERHUB_PASSWORD }}

      - name: build ${{ steps.tags.outputs.vm-postgres-16-bullseye }}
        run: |
          ./bin/vm-builder -src postgres:16-bullseye -spec tests/e2e/image-spec.yaml -dst ${{ steps.tags.outputs.vm-postgres-16-bullseye }} -daemon-image ${{ steps.tags.outputs.daemon }} -target-arch linux/${{ matrix.arch }}

      - name: docker push and annotate image ${{ steps.tags.outputs.vm-postgres-16-bullseye }}
        run: |
          # docker manifest command works only with remote images so we need to push the image first
          docker push ${{ steps.tags.outputs.vm-postgres-16-bullseye }}
          docker buildx imagetools inspect ${{ steps.tags.outputs.vm-postgres-16-bullseye }} --format '{{ .Manifests }}'
          docker manifest create ${{ steps.tags.outputs.vm-postgres-16-bullseye }} ${{ steps.tags.outputs.vm-postgres-16-bullseye }}
          docker manifest annotate ${{ steps.tags.outputs.vm-postgres-16-bullseye }} ${{ steps.tags.outputs.vm-postgres-16-bullseye }} --os linux --arch ${{ matrix.arch }}
          docker manifest push ${{ steps.tags.outputs.vm-postgres-16-bullseye }}

  merge-vm-images:
    needs: [build]
    runs-on: ubuntu-latest
    outputs:
      vm-postgres-16-bullseye: ${{ steps.merge-vm-images.outputs.vm-postgres-16-bullseye }}
    env:
      ARCHS: ${{ join(fromJson(inputs.archs), ' ') }}
      TAG: ${{ inputs.tag }}
    steps:
      - name: git checkout
        uses: actions/checkout@v4

      - name: docker - setup buildx
        uses: docker/setup-buildx-action@v3

      - name: login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.NEON_DOCKERHUB_USERNAME }}
          password: ${{ secrets.NEON_DOCKERHUB_PASSWORD }}

      - name: Merge vm images
        id: merge-vm-images
        run: |
          result_image="${{ env.IMG_POSTGRES_16_BULLSEYE }}:${TAG}"

          args=("-t" "${result_image}")
          for arch in ${ARCHS}; do
            args+=("${{ env.IMG_POSTGRES_16_BULLSEYE }}-${arch}:${TAG}")
          done

          docker buildx imagetools create "${args[@]}"

          echo "vm-postgres-16-bullseye=${result_image}" >> $GITHUB_OUTPUT
