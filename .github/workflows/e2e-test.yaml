name: e2e-test
on:
  pull_request:
  push:
    paths:
      - "neonvm/**"
      - "tests/**"
      - "**.go"
      - "Makefile"
    branches:
      - main

jobs:
  tests:
    runs-on: [ self-hosted, gen3, small ]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'

      - uses: docker/setup-buildx-action@v2

      - name: Install dependencies
        run: |
          LOCALBIN=$(pwd)/bin
          mkdir -p ${LOCALBIN}

          # Install kubectl
          curl -Lo ${LOCALBIN}/kubectl https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl
          chmod +x ${LOCALBIN}/kubectl

          # Install kind
          curl -Lo ${LOCALBIN}/kind https://kind.sigs.k8s.io/dl/${KIND_VERSION}/kind-linux-amd64
          chmod +x ${LOCALBIN}/kind

          # Install kuttl
          curl -Lo ${LOCALBIN}/kubectl-kuttl https://github.com/kudobuilder/kuttl/releases/download/${KUTTL_VERSION}/kubectl-kuttl_${KUTTL_VERSION#v}_linux_x86_64
          chmod +x ${LOCALBIN}/kubectl-kuttl

          echo ${LOCALBIN} >> $GITHUB_PATH
        env:
          KUBECTL_VERSION: v1.26.1
          KIND_VERSION: v0.17.0
          KUTTL_VERSION: v0.15.0

      - name: Check dependencies
        run: |
          kubectl version --client --output=yaml
          kind version
          kubectl kuttl version
          docker version
          docker buildx version

      # To save some time use prebuilt vm kernel instead of running `make kernel` (see .github/workflows/release.yaml)
      - name: Load VM kernel
        run: |
          docker pull --quiet ${VM_KERNEL_IMAGE}:${VM_KERNEL_VERSION}
          ID=$(docker create ${VM_KERNEL_IMAGE}:${VM_KERNEL_VERSION} true)
          docker cp ${ID}:/vmlinuz neonvm/hack/vmlinuz
          docker rm -f ${ID}
        env:
          VM_KERNEL_IMAGE: "neondatabase/vm-kernel"
          VM_KERNEL_VERSION: "5.15.80"

      # Explicitly build all the images beforehand. Building images while the cluster is up can
      # sometimes affect the cluster. For more information:
      # https://github.com/neondatabase/autoscaling/issues/120#issuecomment-1493405844
      - run: make docker-build
      - run: make docker-build-examples

      - name: make local-cluster
        run: make local-cluster
        id: make_local_cluster

      - run: make deploy
      - run: make example-vms

      - name: Run make e2e
        run: |
          # Increase inotify limits for dnsmasq to fix
          #   "dnsmasq: failed to create inotify: No file descriptors available"
          sudo sysctl fs.inotify.max_user_instances=8192
          sudo sysctl fs.inotify.max_user_watches=524288
          sudo sysctl -p

          kubectl kuttl test --config tests/e2e/kuttl-test.yaml --skip-delete

      - name: Get k8s logs and events
        if: ${{ failure() || cancelled() }}
        run: |
          if ! kubectl config current-context; then
            echo "skipping cluster logs because no cluster found in kubectl context"
            exit 0
          fi
          namespaces=$(kubectl get namespaces -o jsonpath='{.items[*].metadata.name}')
          for namespace in $namespaces; do
            pods=$(kubectl get pods -n $namespace -o jsonpath='{.items[*].metadata.name}')
            for pod in $pods; do
              echo "*** Namespace=$namespace Pod=$pod ***"
              echo "Logs:"
              kubectl logs -n $namespace $pod || echo 'Error getting logs'
              echo "Events:"
              kubectl get events --namespace $namespace --field-selector involvedObject.name=$pod || echo 'Error getting events'
              echo ""
            done
          done

      - name: Cleanup
        if: always()
        run: |
          kind delete cluster
