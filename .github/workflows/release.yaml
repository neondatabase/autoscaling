name: release
on:
  # # UNCOMMENT TO ALLOW TESTING:
  # pull_request:
  push:
    tags:
      - "v*.*.*"

defaults:
  run:
    shell: bash -euo pipefail {0}

jobs:
  get-tag:
    outputs:
      tag: ${{ steps.get-tag.outputs.tag }}
      dry-run: ${{ steps.get-tag.outputs.dry-run }}
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: get tag
        id: get-tag
        env:
          REF_NAME: ${{ github.ref_name }}
          SHA: ${{ github.event.pull_request.head.sha || '' }}
        run: |
          if [[ "$GITHUB_EVENT_NAME" == "pull_request" ]]; then
            echo "dry-run=true" | tee -a $GITHUB_OUTPUT
            sha="${SHA::7}"
            day="$(date -u '+%+4Y%m%d')" # equivalent to %F (e.g. '2024-01-19') with no dashes (e.g. '20240119')
            echo "tag=testrelease-$day.$sha.$GITHUB_RUN_ID" | tee -a $GITHUB_OUTPUT
          else
            echo "dry-run=false" | tee -a $GITHUB_OUTPUT
            echo "tag=$REF_NAME" | tee -a $GITHUB_OUTPUT
          fi

  build-images:
    uses: ./.github/workflows/build-images.yaml
    needs: get-tag
    with:
      tag: ${{ needs.get-tag.outputs.tag }}
      upload-to-ecr-acr: true
      archs: '["amd64","arm64"]'
    secrets: inherit

  build-test-vm:
    uses: ./.github/workflows/build-test-vm.yaml
    needs: get-tag
    with:
      tag: ${{ needs.get-tag.outputs.tag }}
      upload-vm-builder: true
      archs: '["amd64","arm64"]'
    secrets: inherit

  e2e:
    needs: [ get-tag, build-images, build-test-vm ]
    uses: ./.github/workflows/e2e-test.yaml
    with:
      tag: ${{ needs.get-tag.outputs.tag }}
      push-yamls: true
    secrets: inherit

  release:
    needs: [ get-tag, e2e ]
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: download vm-builder
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
        with:
          pattern: 'vm-builder-*'

      - name: download manifests
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
        with:
          name: rendered_manifests
          # files in the artifact will be expanded into the directory 'rendered_manifests'.
          # See e2e-test.yaml: the individual yamls are flattened inside the artifact.
          path: rendered_manifests

      - name: rename vm-builder files
        run: |
          # add the arch-specific suffix to the binary name, so they don't conflict when used as
          # assets attached to the release.
          mv vm-builder-amd64/vm-builder vm-builder-amd64/vm-builder-amd64
          mv vm-builder-arm64/vm-builder vm-builder-arm64/vm-builder-arm64

      - name: github release
        if: ${{ needs.get-tag.outputs.dry-run == 'false' }}
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2.2.1
        with:
          fail_on_unmatched_files: true
          files: |
            vm-builder-amd64/vm-builder-amd64
            vm-builder-arm64/vm-builder-arm64
            rendered_manifests/autoscale-scheduler.yaml
            rendered_manifests/autoscaler-agent.yaml
            rendered_manifests/neonvm.yaml
            rendered_manifests/neonvm-controller.yaml
            rendered_manifests/neonvm-vxlan-controller.yaml
            rendered_manifests/neonvm-runner-image-loader.yaml
            rendered_manifests/multus-dev.yaml
            rendered_manifests/multus-aks.yaml
            rendered_manifests/multus-eks.yaml
            rendered_manifests/whereabouts.yaml
            vmscrape.yaml
