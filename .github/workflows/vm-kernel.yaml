name: vm-kernel

on:
  schedule:
    - cron:  '42 4 * * 2'  # run once a week
  workflow_dispatch: # adds ability to run this manually
    inputs:
      push:
        description: 'Push to Docker Hub'
        type: boolean
        default: false
      tag:
        description: 'Tag to use for Docker image'
        type: string
        required: false
  workflow_call:
    inputs:
      push:
        description: 'Push to Docker Hub'
        type: boolean
        default: false
      tag:
        description: 'Tag to use for Docker image'
        type: string
        required: false
      kernel-image-tag-override:
        description: 'If set, the workflow return the full image name for this tag'
        type: string
        required: false
        default: ''
    outputs:
      image:
        description: 'vm-kernel Docker image'
        value: ${{ jobs.check-kernel-image-override.outputs.image || jobs.vm-kernel.outputs.image }}

env:
  VM_KERNEL_IMAGE: "neondatabase/vm-kernel"

jobs:
  check-kernel-image-override:
    outputs:
      image: ${{ steps.check-kernel-image-override.outputs.image }}

    runs-on: ubuntu-latest

    steps:
      - id: check-kernel-image-override
        env:
          OVERRIDE_TAG: ${{ inputs.kernel-image-tag-override }}
        run: |
          if [ -n "${OVERRIDE_TAG}" ]; then
            DIGEST=$(docker manifest inspect ${VM_KERNEL_IMAGE}:${OVERRIDE_TAG} -v | jq -r '.Descriptor.digest')
            IMAGE="${VM_KERNEL_IMAGE}:${OVERRIDE_TAG}@${DIGEST}"
          else
            IMAGE=""
          fi
          echo "image=${IMAGE}" >> $GITHUB_OUTPUT

  vm-kernel:
    needs: check-kernel-image-override
    if: needs.check-kernel-image-override.outputs.image == ''
    outputs:
      image: ${{ fromJSON(steps.build-linux-kernel.outputs.metadata)['image.name'] }}@${{ steps.build-linux-kernel.outputs.digest }}

    runs-on: [ self-hosted, gen3, large ]
    steps:
      - name: git checkout
        uses: actions/checkout@v3

      # Use custom DOCKER_CONFIG directory to avoid conflicts with default settings
      # The default value is ~/.docker
      - name: set custom docker config directory
        run: |
          mkdir -p .docker-custom
          echo DOCKER_CONFIG=$(pwd)/.docker-custom >> $GITHUB_ENV

      - name: docker - install qemu
        uses: docker/setup-qemu-action@v2
      - name: docker - setup buildx
        uses: docker/setup-buildx-action@v2
      - name: login to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.NEON_DOCKERHUB_USERNAME }}
          password: ${{ secrets.NEON_DOCKERHUB_PASSWORD }}

      - name: get kernel version
        id: get-kernel-version
        run: |
          linux_config=$(ls neonvm/hack/linux-config-*)  # returns something like "neonvm/hack/linux-config-6.1.63"
          kernel_version=${linux_config##*-}             # returns something like "6.1.63"

          echo VM_KERNEL_VERSION=$kernel_version >> $GITHUB_OUTPUT

      - name: build linux kernel
        id: build-linux-kernel
        uses: docker/build-push-action@v3
        with:
          build-args: KERNEL_VERSION=${{ steps.get-kernel-version.outputs.VM_KERNEL_VERSION }}
          context: neonvm/hack
          platforms: linux/amd64
          # Push kernel image only for scheduled builds or if workflow_dispatch/workflow_call input is true
          push: ${{ github.event_name == 'schedule' && 'true' || ( inputs.push || 'false' ) }}
          pull: true
          no-cache: true
          file: neonvm/hack/Dockerfile.kernel-builder
          # Tag kernel image with workflow_dispatch/workflow_call input or with the kernel version by default
          tags: ${{ env.VM_KERNEL_IMAGE }}:${{ inputs.tag || steps.get-kernel-version.outputs.VM_KERNEL_VERSION }}
      - name: remove custom docker config directory
        if: always()
        run: |
          rm -rf .docker-custom
