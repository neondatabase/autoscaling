FROM localhost:5001/vm-informant:latest as informant
# ^ don't do anything with this; we just want it around for later use.

# Build the allocation tester:
FROM alpine:3.16 AS allocate-loop-builder

RUN set -e \
	&& apk add gcc musl-dev

COPY allocate-loop.c allocate-loop.c

RUN set -e \
	&& gcc -g -O allocate-loop.c -o /bin/allocate-loop

FROM alpine:3.16 AS rootfs

RUN set -e \
	&& apk add --no-cache \
		ca-certificates \
		util-linux-misc \
        coreutils \
		cgroup-tools

# Add the vm-informant 
COPY --from=informant /usr/bin/vm-informant /bin/vm-informant

# Add the allocate-loop tester
COPY --from=allocate-loop-builder /bin/allocate-loop /bin/allocate-loop

ADD init     /bin/userstartup
RUN chmod +x /bin/userstartup

# postgresql stuff
RUN set -e \
	&& apk add --no-cache \
		su-exec \
		postgresql14
ADD postgresql.conf /etc/postgresql.conf
ADD pg_hba.conf     /etc/pg_hba.conf

# Initialize postgres
ENV PGDATA /var/lib/postgresql
RUN set -e \
    && mkdir -p ${PGDATA} /run/postgresql \
    && chown -R postgres:postgres ${PGDATA} /run/postgresql\
    && su-exec postgres pg_ctl init

# ssh stuff
RUN set -e \
    && apk add --no-cache \
        openssh-server
ADD sshd_config /etc/ssh/sshd_config
ADD ssh_id_rsa.pub /etc/ssh/authorized_keys
# 'authorized_keys' needs to have the right mode bits, otherwise it'll get ignored by sshd
RUN set -e \
    && chmod 600 /etc/ssh/authorized_keys

# set the greeting message on ssh logins
RUN echo -e 'Welcome to Alpine!\n ~ This is the VM :) ~' >/etc/motd

ENTRYPOINT ["/bin/userstartup"]
