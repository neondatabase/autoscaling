#!/bin/sh
#
# note: We've been careful to ensure that this script is POSIX shell compliant, so that we don't
# require bash in the test VM image.

set -x

# node_exporter metrics (/metrics on :9100)
run_metrics () {
    while true; do
        node_exporter 2>>/run/node_exporter/log >>/run/node_exporter/log
        echo "$(date -R): node_exporter exited, retrying in 1s" | tee -a /run/node_exporter/log
        sleep 1s
    done
}

mkdir -p /run/node_exporter
run_metrics &

run_informant () {
    while true; do
        vm-informant 2>&1 | tee -a /run/vm-informant/log
        echo "$(date -R): vm-informant exited, retrying in 1s" | tee -a /run/vm-informant/log
    done
}

mkdir -p /run/vm-informant
run_informant &

# postgresql init and start (data in memory!)
export PGDATA=/var/lib/postgresql
mkdir -p /run/postgresql && chown -R postgres:postgres /run/postgresql
su-exec postgres pg_ctl start -o '-c config_file=/etc/postgresql.conf -c hba_file=/etc/pg_hba.conf'

echo; cat /etc/os-release | grep PRETTY_NAME | cut -d'"' -f2
echo -e "\Start took $(cut -d' ' -f1 /proc/uptime) seconds\n"

graceful () {
    su-exec postgres pg_ctl stop
    poweroff -f
}

trap graceful TERM INT KILL

mkdir -p /run/sshd

# If we stored the ssh keys in the container data, they could be extracted.
echo "Generating sshd keys"
mkdir -p /run/sshd/etc
ln -s /run/sshd /run/sshd/etc/ssh
ssh-keygen -A -f /run/sshd # using -f here just prefixes, so the paths are /run/sshd/etc/ssh/ssh_host_*
rm /run/sshd/etc/ssh

echo "Starting sshd"
while true; do
    # Having ssh troubles? Replace the sshd line with:
    #   setsid -w /usr/bin/sshd -dd
    # It'll print the logs directly here, with two debug levels. Then you can access them with
    # `kubectl logs <pod>` to see what's going on. (note: it exits after each connection ends)
    # For `ssh-into-vm.sh`, you can add debugging to the original ssh by adding `-vv` there.
    setsid -w /usr/sbin/sshd -D -E /run/sshd/log \
        -h /run/sshd/ssh_host_ecdsa_key \
        -h /run/sshd/ssh_host_ed25519_key \
        -h /run/sshd/ssh_host_rsa_key
    echo "$(date -R): sshd exited, retrying in 1s" | tee -a /run/sshd/log
    sleep 1s
done

echo "Exiting and shutting down vm"
graceful
