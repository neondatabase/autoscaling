diff --git a/cluster-autoscaler/utils/kubernetes/listers.go b/cluster-autoscaler/utils/kubernetes/listers.go
index b9be94b6e..403644b71 100644
--- a/cluster-autoscaler/utils/kubernetes/listers.go
+++ b/cluster-autoscaler/utils/kubernetes/listers.go
@@ -17,10 +17,12 @@ limitations under the License.
 package kubernetes
 
 import (
+	"encoding/json"
 	"time"
 
 	apiv1 "k8s.io/api/core/v1"
 	policyv1 "k8s.io/api/policy/v1"
+	"k8s.io/apimachinery/pkg/api/resource"
 	"k8s.io/apimachinery/pkg/fields"
 	"k8s.io/apimachinery/pkg/labels"
 	"k8s.io/client-go/informers"
@@ -46,6 +48,11 @@ type ListerRegistry interface {
 	StatefulSetLister() v1appslister.StatefulSetLister
 }
 
+type virtualMachineUsage struct {
+	CPU    resource.Quantity `json:"cpu"`
+	Memory resource.Quantity `json:"memory"`
+}
+
 type listerRegistryImpl struct {
 	allNodeLister               NodeLister
 	readyNodeLister             NodeLister
@@ -221,6 +228,22 @@ type AllPodLister struct {
 	podLister v1lister.PodLister
 }
 
+func updatePodRequestsFromNeonVMAnnotation(pod *apiv1.Pod) {
+	annotation, ok := pod.Annotations["vm.neon.tech/usage"]
+	if !ok {
+		return
+	}
+
+	var usage virtualMachineUsage
+	if err := json.Unmarshal([]byte(annotation), &usage); err != nil {
+		return
+	}
+	pod.Spec.Containers[0].Resources.Requests = apiv1.ResourceList(map[apiv1.ResourceName]resource.Quantity{
+		apiv1.ResourceCPU:    usage.CPU,
+		apiv1.ResourceMemory: usage.Memory,
+	})
+}
+
 // List returns all scheduled pods.
 func (lister *AllPodLister) List() ([]*apiv1.Pod, error) {
 	var pods []*apiv1.Pod
@@ -229,9 +252,12 @@ func (lister *AllPodLister) List() ([]*apiv1.Pod, error) {
 	if err != nil {
 		return pods, err
 	}
+
 	for _, p := range allPods {
 		if p.Status.Phase != apiv1.PodSucceeded && p.Status.Phase != apiv1.PodFailed {
-			pods = append(pods, p)
+			podCopy := p.DeepCopy()
+			updatePodRequestsFromNeonVMAnnotation(podCopy)
+			pods = append(pods, podCopy)
 		}
 	}
 	return pods, nil
