openapi: "3.0.0"
servers:
  - url: "http://console-release.local/billing/api/v1"
    description: Production
  - url: "http://console-staging.local/billing/api/v1"
    description: Staging

info:
  description: Neon billing API
  title: Neon billing API
  version: v1
  contact:
    email: "e@neon.tech"
  license:
    name: "Proprietary"


paths:
  /usage_events:
    post:
      summary: Report usage.
      tags:
        - Usage
      operationId: postUsageEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventsBatch"
            examples:
              effective_compute_seconds:
                value:
                  {
                    "events": [
                      {
                        "idempotency_key": "2022-12-03T11:20:45.868Z-console.local-1",
                        "metric": "effective_compute_seconds",
                        "type": "incremental",
                        "endpoint_id": "ep-muddy-forest-897102",
                        "start_time": "2022-12-03T11:20:45.868Z",
                        "stop_time": "2022-12-03T11:20:50.868Z",
                        "value": 71383
                      }
                    ]
                  }
              s3_tenant_size_bytes:
                value:
                  {
                    "events": [
                      {
                        "idempotency_key": "2022-12-03T11:20:45.868Z-console.local-1",
                        "metric": "s3_tenant_size_bytes",
                        "type": "absolute",
                        "tenant_id": "168c817847d3853235ac5e84141d92de",
                        "time": "2022-12-03T11:20:45.868Z",
                        "value": 84423975,
                        "timeline_id": "consequatnul"
                      }
                    ]
                  }
      responses:
        200:
          $ref: "#/components/responses/EmptyResponse"
        default:
          $ref: "#/components/responses/GeneralError"
  /healthz:
    get:
      summary: Health check
      tags:
        - health
      operationId: healthCheck
      responses:
        200:
          $ref: "#/components/responses/HealthyResponse"
        default:
          $ref: "#/components/responses/GeneralError"

components:
  responses:
    EmptyResponse:
      description: Empty response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmptyResponse'

    HealthyResponse:
      description: Server is up and ready
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HealthyResponse'

    GeneralError:
      description: General Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralError'


  schemas:
    EventsBatch:
      type: object
      required:
        - events
      properties:
        events:
          type: array
          items:
            discriminator:
              propertyName: type
              mapping:
                absolute: "#/components/schemas/AbsoluteEvent"
                incremental: "#/components/schemas/IncrementalEvent"
            oneOf:
              - $ref: "#/components/schemas/AbsoluteEvent"
              - $ref: "#/components/schemas/IncrementalEvent"

    AbsoluteEvent:
      type: object
      description: |
        A quant of cloud usage info containing single absolute float number (integer will also do).
      required:
        - idempotency_key
        - metric
        - type
        - tenant_id
        - time
        - value
      properties:
        idempotency_key:
          description: |
            A unique value, generated by the client, that is
            used to de-duplicate events.
            Concatenating date with nanoseconds + hostname is a good idea of where to start.
          type: string
        metric:
          description: Metric name
          type: string
        type:
          type: string
          enum:
            - absolute
        tenant_id:
          type: string
        timeline_id:
          type: string
        time:
          type: string
          format: date-time
        value:
          type: integer

    IncrementalEvent:
      type: object
      description: |
        A quant of cloud usage info containing single delta float number (integer will also do).
      required:
        - idempotency_key
        - metric
        - type
        - endpoint_id
        - start_time
        - stop_time
        - value
      properties:
        idempotency_key:
          description: |
            A unique value, generated by the client, that is
            used to de-duplicate events.
            Concatenating date with nanoseconds + hostname is a good idea of where to start.
          type: string
        metric:
          description: Metric name
          type: string
        type:
          type: string
          enum:
            - incremental
        endpoint_id:
          type: string
        start_time:
          type: string
          format: date-time
        stop_time:
          type: string
          format: date-time
        value:
          type: integer

    EmptyResponse:
      type: object

    HealthyResponse:
      type: object
      required:
        - status
      properties:
        status:
          description: "Is ready?"
          type: string

    #
    # Errors
    #

    GeneralError:
      type: object
      required:
        - error
      properties:
        error:
          description: "Error description"
          type: string
