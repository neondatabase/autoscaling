apiVersion: kuttl.dev/v1beta1
kind: TestStep
unitTest: false
---
apiVersion: v1
kind: Service
metadata:
  name: example
spec:
  ports:
  - name: postgres
    port: 5432
    protocol: TCP
    targetPort: postgres
  type: NodePort
  selector:
    vm.neon.tech/name: example
---
apiVersion: vm.neon.tech/v1
kind: VirtualMachine
metadata:
  name: example
  labels:
    autoscaling.neon.tech/enabled: "true"
  annotations:
    autoscaling.neon.tech/bounds: '{ "min": { "cpu": 1, "mem": "1Gi" }, "max": { "cpu": 4, "mem": "4Gi" } }'
spec:
  schedulerName: autoscale-scheduler
  guest:
    cpus:
      min: 1
      max: 5 # set value greater than bounds so our tests check we don't exceed the bounds.
      use: 1
    memorySlotSize: 1Gi
    memorySlots:
      min: 1
      max: 5
      use: 1
    rootDisk:
      image: vm-example:dev
      size: 8Gi
    args:
      - -c
      - 'config_file=/etc/postgresql/postgresql.conf'
    env:
      # for testing only - allows login without password
      - name: POSTGRES_HOST_AUTH_METHOD
        value: trust
    ports:
      - name: postgres
        port: 5432
      - name: host-metrics
        port: 9100
      - name: informant
        port: 10301
  extraNetwork:
      enable: true
  disks:
    - name: pgdata
      mountPath: /var/lib/postgresql
      emptyDisk:
        size: 16Gi
    - name: postgres-config
      mountPath: /etc/postgresql
      configMap:
        name: example-config
        items:
          - key: postgresql.conf
            path: postgresql.conf
    - name: cache
      mountPath: /neonvm/cache
      tmpfs:
        size: 1Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: example-config
data:
  postgresql.conf: |
    listen_addresses = '*'
    shared_preload_libraries = 'pg_stat_statements'

    max_connections = 64
    shared_buffers = 256MB
    effective_cache_size = 1536MB
    maintenance_work_mem = 128MB
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    default_statistics_target = 100
    random_page_cost = 1.1
    effective_io_concurrency = 200
    work_mem = 4MB
    min_wal_size = 1GB
    max_wal_size = 4GB
    max_worker_processes = 4
    max_parallel_workers_per_gather = 2
    max_parallel_workers = 4
    max_parallel_maintenance_workers = 2
