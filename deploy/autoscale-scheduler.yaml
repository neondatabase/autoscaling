apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vm-patcher
rules:
- apiGroups: ["vm.neon.tech"]
  resources: ["virtualmachines"]
  verbs: ["create", "delete", "get", "list", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: autoscale-scheduler-config-reader
  namespace: kube-system
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
  # watching is ok as long as we use ListOptions.FieldSelector to limit it to the appropriate name
  resourceNames: ["scheduler-plugin-config"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: autoscale-scheduler
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: autoscale-scheduler-as-vm-patcher
  namespace: kube-system
subjects:
- kind: ServiceAccount
  name: autoscale-scheduler
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: vm-patcher
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: autoscale-scheduler-as-kube-scheduler
subjects:
- kind: ServiceAccount
  name: autoscale-scheduler
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: system:kube-scheduler
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: autoscale-scheduler-as-volume-scheduler
subjects:
- kind: ServiceAccount
  name: autoscale-scheduler
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: system:volume-scheduler
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: autoscale-scheduler-apiserver-auth-config
  namespace: kube-system
subjects:
- kind: ServiceAccount
  name: autoscale-scheduler
  namespace: kube-system
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
---
apiVersion: v1
kind: Namespace
metadata:
  name: autoscaler-config
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: autoscale-scheduler-config-reader
  namespace: kube-system
subjects:
- kind: ServiceAccount
  name: autoscale-scheduler
  namespace: kube-system
roleRef:
  kind: Role
  name: autoscale-scheduler-config-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: autoscale-scheduler-config
  namespace: kube-system
data:
  scheduler-config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1beta3
    kind: KubeSchedulerConfiguration
    leaderElection:
      leaderElect: false
    profiles:
      - schedulerName: autoscale-scheduler
        plugins:
          multiPoint:
            enabled:
              - name: AutoscaleEnforcer
---
# note: this ConfigMap is not meant to be mounted. For better responsiveness, the scheduler listens
# for updates on the ConfigMap object directly.
apiVersion: v1
kind: ConfigMap
metadata:
  name: scheduler-plugin-config
  namespace: kube-system
data:
  autoscaler-enforcer-config.json: |
    {
      "memBlockSize": "1Gi",
      "nodeDefaults": {
        "cpu": { "watermark": 0.7, "system": "500m" },
        "memory": { "watermark": 0.7, "system": "0.5Gi" },
        "computeUnit": { "vCPUs": 1, "mem": 1 }
      },
      "nodeOverrides": [],
      "schedulerName": "autoscale-scheduler",
      "doMigration": false
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: autoscale-scheduler # unstable name
  namespace: kube-system
  labels:
    component: scheduler
    tier: control-plane
spec:
  selector:
    matchLabels:
      component: scheduler
      tier: control-plane
  replicas: 1
  template:
    metadata:
      labels:
        component: scheduler
        name: autoscale-scheduler # stable name
        tier: control-plane
    spec:
      serviceAccountName: autoscale-scheduler
      containers:
      # hey! This image name is hard-coded in .github/workflows/release.yaml - make sure to
      # update that as well if you change this line!
      - image: localhost:5001/kube-autoscale-scheduler:latest
        command: ["/usr/bin/kube-scheduler", "--config=/etc/kubernetes/autoscale-scheduler-config/scheduler-config.yaml"]
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10259
            scheme: HTTPS
          initialDelaySeconds: 15
        name: kube-second-scheduler
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10259
            scheme: HTTPS
        resources:
          requests:
            cpu: '0.1'
        securityContext:
          privileged: false
        volumeMounts:
          - name: scheduler-config-volume
            mountPath: /etc/kubernetes/autoscale-scheduler-config
      hostNetwork: false
      hostPID: false
      volumes:
        - name: scheduler-config-volume
          configMap:
            name: autoscale-scheduler-config
