---
apiVersion: vm.neon.tech/v1
kind: VirtualMachine
metadata:
  name: postgres14-disk-test
  annotations:
    # In this example, these bounds aren't necessary. So... here's what they look like :)
    autoscaling.neon.tech/bounds: '{ "min": { "cpu": 0.25, "mem": "1Gi" }, "max": { "cpu": 1.25, "mem": "5Gi" } }'
  labels:
    autoscaling.neon.tech/enabled: "true"
    # Set to "true" to continuously migrate the VM (TESTING ONLY)
    autoscaling.neon.tech/testing-only-always-migrate: "false"
spec:
  schedulerName: autoscale-scheduler
  guest:
    cpus: { min: 0.25, use: 0.25, max: 1.25 }
    memorySlotSize: 1Gi
    memorySlots: { min: 1, use: 1, max: 5 }
    rootDisk:
      image: pg14-disk-test:dev
      size: 8Gi
    ports:
      - port: 22   # ssh
      - port: 5432 # postgres
      - port: 9100 # metrics
      - port: 10301 # monitor
  disks:
    - name: postgres-config
      mountPath: /etc/myconf
      configMap:
        name: example-config
        items:
          - key: postgresql.conf
            path: mypos.conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: example-config
data:
  postgresql.conf: |
    listen_addresses = '*'
    shared_preload_libraries = 'pg_stat_statements'

    max_connections = 64
    shared_buffers = 256MB
    effective_cache_size = 1536MB
    maintenance_work_mem = 128MB
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    default_statistics_target = 100
    random_page_cost = 1.1
    effective_io_concurrency = 200
    work_mem = 4MB
    min_wal_size = 1GB
    max_wal_size = 4GB
    max_worker_processes = 4
    max_parallel_workers_per_gather = 2
    max_parallel_workers = 4
    max_parallel_maintenance_workers = 2