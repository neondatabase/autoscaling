FROM ubuntu:23.10 AS build-deps

ARG KERNEL_VERSION

RUN set -e \
    && echo "Build linux  kernel ${KERNEL_VERSION}" \
    && test -n "${KERNEL_VERSION}"

WORKDIR /build

RUN apt-get update && apt-get -y install \
    curl \
    ca-certificates \
    build-essential \
    flex \
    bison \
    libelf-dev \
    bc \
    libssl-dev \
    python3 \
    cpio \
    zstd \
    libncurses-dev

RUN set -e \
    && mkdir -p linux-${KERNEL_VERSION} \
    && echo "downloading linux-${KERNEL_VERSION}.tar.xz" \
    && MAJOR=`echo ${KERNEL_VERSION} | sed -E 's/^([0-9]+)\.[0-9]+\.[0-9]+$/\1/'` \
    && curl -sfL https://cdn.kernel.org/pub/linux/kernel/v${MAJOR}.x/linux-${KERNEL_VERSION}.tar.xz -o linux-${KERNEL_VERSION}.tar.xz \
    && echo "unpacking kernel archive" \
    && tar --strip-components=1 -C linux-${KERNEL_VERSION} -xf linux-${KERNEL_VERSION}.tar.xz


FROM build-deps AS build

ARG KERNEL_VERSION

ADD linux-config-${KERNEL_VERSION} linux-${KERNEL_VERSION}/.config

RUN cd linux-${KERNEL_VERSION} && make -j `nproc`

# Use alpine so that `cp` is available when loading custom kernels for the runner pod.
# See the neonvm controller's pod creation logic for more detail.
FROM alpine:3.18
ARG KERNEL_VERSION
COPY --from=build /build/linux-${KERNEL_VERSION}/arch/x86/boot/bzImage /vmlinuz
