apiVersion: v1
kind: Service
metadata:
  name: example
spec:
  ports:
  - name: postgres
    port: 5432
    protocol: TCP
    targetPort: postgres
  - name: pooler
    port: 6432
    protocol: TCP
    targetPort: postgres
  - name: host-metrics
    port: 9100
    protocol: TCP
    targetPort: host-metrics
  - name: metrics
    port: 9187
    protocol: TCP
    targetPort: metrics
  selector:
    vm.neon.tech/name: example

---
apiVersion: vm.neon.tech/v1
kind: VirtualMachine
metadata:
  name: example
spec:
  guest:
    cpus:
      min: 1
      max: 4
      use: 2
    memorySlotSize: 1Gi
    memorySlots:
      min: 1
      max: 2
      use: 2
    rootDisk:
      image: vm-postgres:15-bullseye
      size: 8Gi
    args:
      - -c
      - 'config_file=/etc/postgresql/postgresql.conf'
    env:
      # for testing only - allows login without password
      - name: POSTGRES_HOST_AUTH_METHOD
        value: trust
    ports:
      - name: postgres
        port: 5432
      - name: pooler
        port: 5432
      - name: host-metrics
        port: 9100
      - name: metrics
        port: 9187
  extraNetwork:
      enable: true
  disks:
    - name: pgdata
      mountPath: /var/lib/postgresql
      emptyDisk:
        size: 16Gi
    - name: postgres-config
      mountPath: /etc/postgresql
      configMap:
        name: example-config
        items:
          - key: postgresql.conf
            path: postgresql.conf
    - name: vector-config
      mountPath: /etc/vector
      configMap:
        name: example-config
        items:
          - key: vector.yaml
            path: vector.yaml
    - name: cache
      mountPath: /neonvm/cache
      tmpfs:
        size: 1Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: example-config
data:
  postgresql.conf: |
    listen_addresses = '*'
    shared_preload_libraries = 'pg_stat_statements'

    max_connections = 64
    shared_buffers = 512MB
    effective_cache_size = 1536MB
    maintenance_work_mem = 128MB
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    default_statistics_target = 100
    random_page_cost = 1.1
    effective_io_concurrency = 200
    work_mem = 4MB
    min_wal_size = 1GB
    max_wal_size = 4GB
    max_worker_processes = 4
    max_parallel_workers_per_gather = 2
    max_parallel_workers = 4
    max_parallel_maintenance_workers = 2

  vector.yaml: |
    sources:
      postgresql_metrics:
        type: postgresql_metrics
        endpoints:
          - "postgres://postgres@localhost:5432"
        exclude_databases:
          - "^template.*"
    sinks:
      postgres_exporter:
        type: prometheus_exporter
        inputs:
          - postgresql_metrics
        address: "0.0.0.0:9187"
