apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: multus
    name: multus
    tier: node
  name: kube-multus-ds
  namespace: kube-system
spec:
  selector:
    matchLabels:
      name: multus
  template:
    metadata:
      labels:
        app: multus
        name: multus
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - command:
        - /usr/src/multus-cni/bin/multus-daemon
        image: ghcr.io/k8snetworkplumbingwg/multus-cni:v4.1.3-thick
        name: kube-multus
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          privileged: true
        volumeMounts:
            - name: cni
              mountPath: /host/etc/cni/net.d
            # multus-daemon expects that cnibin path must be identical between pod and container host.
            # e.g. if the cni bin is in '/opt/cni/bin' on the container host side, then it should be mount to '/opt/cni/bin' in multus-daemon,
            # not to any other directory, like '/opt/bin' or '/usr/bin'.
            - name: cnibin
              mountPath: /opt/cni/bin
            - name: host-run
              mountPath: /host/run
            - name: host-var-lib-cni-multus
              mountPath: /var/lib/cni/multus
            - name: host-var-lib-kubelet
              mountPath: /var/lib/kubelet
              mountPropagation: HostToContainer
            - name: host-run-k8s-cni-cncf-io
              mountPath: /run/k8s.cni.cncf.io
            - name: host-run-netns
              mountPath: /run/netns
              mountPropagation: HostToContainer
            - name: multus-daemon-config
              mountPath: /etc/cni/net.d/multus.d
              readOnly: true
            - name: hostroot
              mountPath: /hostroot
              mountPropagation: HostToContainer
        env:
          - name: MULTUS_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName              
      hostNetwork: true
      hostPID: true
      initContainers:
        - name: install-multus-binary
          image: ghcr.io/k8snetworkplumbingwg/multus-cni:v4.1.3-thick
          command:
            - "cp"
            - "/usr/src/multus-cni/bin/multus-shim"
            - "/host/opt/cni/bin/multus-shim"
          resources:
            requests:
              cpu: "10m"
              memory: "15Mi"
          securityContext:
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - name: cnibin
              mountPath: /host/opt/cni/bin
              mountPropagation: Bidirectional
      serviceAccountName: multus
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - hostPath:
          path: /opt/cni/bin
        name: cnibin
      - name: hostroot
        hostPath:
          path: /        
      - name: multus-daemon-config
        configMap:
          name: multus-daemon-config
          items:
          - key: daemon-config.json
            path: daemon-config.json
      - name: host-run
        hostPath:
          path: /run
      - name: host-var-lib-cni-multus
        hostPath:
          path: /var/lib/cni/multus
      - name: host-var-lib-kubelet
        hostPath:
          path: /var/lib/kubelet
      - name: host-run-k8s-cni-cncf-io
        hostPath:
          path: /run/k8s.cni.cncf.io
      - name: host-run-netns
        hostPath:
          path: /run/netns/

  updateStrategy:
    type: RollingUpdate
